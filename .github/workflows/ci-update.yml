# .github/workflows/ci-update.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: ci-update
concurrency: agentic-lib-commit-main
run-name: "ci update [${{ github.ref_name }}]"

on:
  workflow_dispatch:
    inputs:
      upgradeTarget:
        description: 'Select the type of update to run'
        type: choice
        default: 'minor'
        required: false
        options:
          - greatest
          - latest
          - newest
          - patch
          - minor
          - semver
  #workflow_run:
  #  workflows:
  #    - seed-repository
  #  types:
  #    - completed
  #  secrets:
  #    PERSONAL_ACCESS_TOKEN:
  #      required: false
  #    CHATGPT_API_SECRET_KEY:
  #      required: true
  repository_dispatch:
    types: [package-published]
  schedule:
    - cron: '24 1 */28 * *' # schedule-1
    #- cron: '24 1 * * *' # schedule-2
    #- cron: '24 1 * * *' # schedule-3
    #- cron: '24 1 * * *' # schedule-4

env:
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}ยง
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}

jobs:
  agentic-lib:
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-agent-config.yml@6.2.0'
    with:
      configPath: ${{ vars.configPath || '.github/agents/agentic-lib.yml' }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  check-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      branchPrefix: 'agentic-lib-update-dependencies'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: Ensure there isn't already a branch for this prefix
        shell: bash
        run: |
          git fetch origin
          if git branch -r | grep -q 'origin/${{ env.branchPrefix }}'; then
            echo "A branch with the prefix '${{ env.branchPrefix }}' already exists."
            exit 1
          else
            echo "No existing branch with the prefix found."
          fi

  pom-check:
    needs:
      - check-branch
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: mvn
        id: mvn
        shell: bash
        run: |
          if [ -f pom.xml ]; then
            pomXmlExists='true'
          else
            pomXmlExists='false'
          fi
          echo "pomXmlExists=${pomXmlExists?}" | tee -a "${GITHUB_OUTPUT?}"

      - uses: actions/setup-java@v4
        if: steps.mvn.outputs.pomXmlExists == 'true'
        with:
          distribution: 'corretto'
          java-version: 21
          cache: 'maven'
          server-password: PERSONAL_ACCESS_TOKEN
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: download-dependencies
        id: download-dependencies
        if: steps.mvn.outputs.pomXmlExists == 'true'
        shell: bash
        run: ./mvnw --batch-mode --quiet dependency:go-offline > /dev/null 2>&1
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: package
        id: package
        if: steps.mvn.outputs.pomXmlExists == 'true'
        shell: bash
        run: ./mvnw validate
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    outputs:
      pomXmlExists: ${{ steps.mvn.outputs.pomXmlExists }}

  update-npm:
    needs:
      - check-branch
    permissions:
      contents: write
      pull-requests: write
      id-token: write
      packages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-npm-update.yml@6.2.0'
    with:
      buildScript: ${{ needs.agentic-lib.outputs.buildScript }}
      testScript: ${{ needs.agentic-lib.outputs.testScript }}
      mainScript: ${{ needs.agentic-lib.outputs.mainScript }}
      upgradeTarget: ${{ inputs.upgradeTarget || 'patch' }}
      branch: 'agentic-lib-update-dependencies'
      npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
      gitCommitMessage: 'chore: dependency updates'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  update-mvn:
    needs:
      - check-branch
      - update-npm
      - pom-check
    if: ${{ needs.update-npm.outputs.updatedFiles != 'true' && needs.pom-check.outputs.pomXmlExists == 'true' }}
    permissions:
      contents: write
      pull-requests: write
      id-token: write
      packages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-mvn-update.yml@6.2.0'
    with:
      buildScript: './mvnw clean install'
      testScript: './mvnw test'
      upgradeTarget: 'minor'
      branch: 'agentic-lib-update-dependencies'
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
      gitCommitMessage: 'chore: dependency updates'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  create-pr-npm:
    needs:
      - update-npm
    if: ${{ needs.update-npm.outputs.updatedFiles == 'true' }}
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
      checks: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-create-pr.yml@6.2.0'
    with:
      branch: 'agentic-lib-update-dependencies'
      baseBranch: 'main'
      gitCommitMessage: 'chore: dependency updates'
      label: 'automerge'

  automerge-pr-npm:
    needs:
      - create-pr-npm
      - update-npm
    if: ${{ needs.update-npm.outputs.updatedFiles == 'true' }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
      issues: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/ci-automerge.yml@6.2.0'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  create-pr-mvn:
    needs:
      - update-mvn
      - pom-check
    if: ${{ needs.update-mvn.outputs.updatedFiles == 'true' && needs.pom-check.outputs.pomXmlExists == 'true' }}
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
      checks: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-create-pr.yml@6.2.0'
    with:
      branch: 'agentic-lib-update-dependencies'
      baseBranch: 'main'
      gitCommitMessage: 'chore: dependency updates'
      label: 'automerge'

  automerge-pr-mvn:
    needs:
      - create-pr-mvn
      - update-mvn
      - pom-check
    if: ${{ needs.update-mvn.outputs.updatedFiles == 'true' && needs.pom-check.outputs.pomXmlExists == 'true' }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
      issues: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/ci-automerge.yml@6.2.0'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
