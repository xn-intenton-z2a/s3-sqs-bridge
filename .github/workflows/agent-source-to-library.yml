# .github/workflows/agent-source-to-library.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: agent-source-to-library
concurrency: agent-source-to-library
run-name: "agent source to library"

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - agent-mission-to-source
    types:
      - completed
  #schedule:
    #- cron: '15 4 */7 * *' # schedule-unused-see-workflow_run-1
    #- cron: '15 4 * * *' # schedule-unused-see-workflow_run-2
    #- cron: '15 */1 * * *' # schedule-unused-see-workflow_run-3
    #- cron: '15 * * * *' # schedule-unused-see-workflow_run-4

env:
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  public: ${{ vars.public || 'public' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}ยง
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}

jobs:

  agentic-lib:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Configure npm for GitHub Packages
        run: |
          echo "${{ env.npmAuthOrganisation }}:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN }}" >> .npmrc
          echo "always-auth=true" >> .npmrc

      - name: Install dependencies
        run: npm ci

      - name: agentic-lib
        id: agentic-lib
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const yaml = require('js-yaml');

            // Default values
            let documentsLimit = "3";
            let libraryDir = "library/";
            let sourcesFile = "SOURCES*.md";
            let writeableFilepaths = [];

            // Check if agentic-lib.yml exists
            const configPath = path.join('.github', 'agentic-lib.yml');
            if (fs.existsSync(configPath)) {
              try {
                // Read and parse the YAML file
                const fileContents = fs.readFileSync(configPath, 'utf8');
                const config = yaml.load(fileContents);

                // Extract documentsLimit
                if (config.documentsLimit) {
                  documentsLimit = config.documentsLimit.toString();
                } else {
                  console.log(`Warning: documentsLimit not found in .github/agentic-lib.yml, using default value: ${documentsLimit}`);
                }

                // Extract library path from writeableFilepaths
                if (config.writeableFilepaths && config.writeableFilepaths.library) {
                  libraryDir = config.writeableFilepaths.library.replace(/"/g, '');
                } else {
                  console.log(`Warning: library path not found in writeableFilepaths in .github/agentic-lib.yml, using default value: ${libraryDir}`);
                }

                // Extract sources path from writeableFilepaths
                if (config.writeableFilepaths && config.writeableFilepaths.sources) {
                  sourcesFile = config.writeableFilepaths.sources.replace(/"/g, '');
                } else {
                  console.log(`Warning: sources path not found in writeableFilepaths in .github/agentic-lib.yml, using default value: ${sourcesFile}`);
                }

                // Extract all writeable filepaths
                if (config.writeableFilepaths) {
                  writeableFilepaths = Object.values(config.writeableFilepaths)
                    .filter(value => value && value.trim() !== '')
                    .map(value => value.replace(/"/g, ''));
                }
              } catch (error) {
                console.log(`Error parsing .github/agentic-lib.yml: ${error.message}`);
                console.log(`Using default values: documentsLimit=${documentsLimit}, libraryDir=${libraryDir}, sourcesFile=${sourcesFile}`);
              }
            } else {
              console.log(`Warning: .github/agentic-lib.yml file not found, using default values: documentsLimit=${documentsLimit}, libraryDir=${libraryDir}, sourcesFile=${sourcesFile}`);
            }

            // Set outputs
            console.log(`documentsLimit=${documentsLimit}`);
            core.setOutput('documentsLimit', documentsLimit);

            console.log(`libraryDir=${libraryDir}`);
            core.setOutput('libraryDir', libraryDir);

            console.log(`sourcesFile=${sourcesFile}`);
            core.setOutput('sourcesFile', sourcesFile);

            console.log(`writeableFilepaths=${JSON.stringify(writeableFilepaths)}`);
            core.setOutput('writeableFilepaths', JSON.stringify(writeableFilepaths));
    outputs:
      documentsLimit: ${{ steps.agentic-lib.outputs.documentsLimit }}
      libraryDir: ${{ steps.agentic-lib.outputs.libraryDir }}
      sourcesFile: ${{ steps.agentic-lib.outputs.sourcesFile }}
      writeableFilepaths: ${{ steps.agentic-lib.outputs.writeableFilepaths }}

  # If the document is "house choice", the repository will be assessed and an action chosen otherwise the supplied text will be used to generate a new document.
  maintain-library:
    needs:
      - agentic-lib
    permissions:
      contents: write
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-completion-maintain-library.yml@4.1.0'
    with:
      libraryDir: '${{ needs.agentic-lib.outputs.libraryDir }}'
      sourcesFile: '${{ needs.agentic-lib.outputs.sourcesFile }}'
      documentsLimit: '${{ needs.agentic-lib.outputs.documentsLimit }}'
      model: ${{ vars.CHATGPT_API_MODEL || 'o3-mini' }}
      npmAuthOrganisation: '@xn-intenton-z2a'
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
      writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  select-issue:
    permissions:
      issues: read
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-select-issue.yml@4.1.0'
    with:
      issueNumber: ''
      selectionLabel: 'ready'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  stats:
    needs:
      - select-issue
      - maintain-library
    if: ${{ always() }}
    permissions:
      contents: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-stats-to-aws.yml@4.1.0'
    with:
      cache: 'npm'
      npmAuthOrganisation: "${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}"
      lastActivityName: "${{ github.workflow }}"
      lastActivityBranchName: "${{ github.ref_name }}"
      nextIssue: "[${{ needs.select-issue.outputs.issueNumber }}] ${{ needs.select-issue.outputs.issueTitle }} ${{ needs.select-issue.outputs.issueLabels }}"
      public: 'public'
      s3BucketUrl: "${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}"
      s3WebsiteBucketUrl: "${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}"
      iamActionsRoleArn: "${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}"
      iamStatsBucketWriterRoleArn: "${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}"
      iamPublicWebsiteStatsBucketWriterRoleArn: "${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}"
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
