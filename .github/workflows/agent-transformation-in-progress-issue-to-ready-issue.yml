# .github/workflows/agent-transformation-in-progress-issue-to-ready-issue
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: in-progress-issue-to-ready-issue
#concurrency: issue-to-ready-issue
run-name: "in progress issue to ready issue"

on:
  workflow_dispatch:
    inputs:
      issueNumber:
        description: 'The issue number to resolve. If not provided, the workflow will select one based on label. e.g. "123"'
        required: false
        type: string
        default: ''
      selectionLabel:
        description: 'Label used to filter issues for resolution. e.g. "in-progress"'
        required: false
        type: string
        default: 'in-progress'
  workflow_call:
    inputs:
      issueNumber:
        description: 'The issue number to resolve. If not provided, the workflow will select one based on label. e.g. "123"'
        required: false
        type: string
        default: ''
      selectionLabel:
        description: 'Label used to filter issues for resolution. e.g. "in-progress"'
        required: false
        type: string
        default: 'in-progress'
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false
      CHATGPT_API_SECRET_KEY:
        required: true
  #workflow_run:
  #  workflows:
  #    - agent-feature-to-issue
  #    - agent-maintenance-activity-to-issue
  #    - agent-linting-to-issue
  #  types:
  #    - completed
  #  secrets:
  #    PERSONAL_ACCESS_TOKEN:
  #      required: false
  #    CHATGPT_API_SECRET_KEY:
  #      required: true
  schedule:
    - cron: '34 4 */7 * *' # schedule-1
    #- cron: '34 4 * * *' # schedule-2
    #- cron: '14,34 * * * *' # schedule-3
    #- cron: '34 1 * * *' # schedule-4

env:
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}

jobs:

  agentic-lib:
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-agent-config.yml@6.2.9'
    with:
      configPath: ${{ vars.configPath || '.github/agents/agentic-lib.yml' }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  select-issue:
    permissions:
      issues: read
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-select-issue.yml@6.2.9'
    with:
      issueNumber: ${{ inputs.issueNumber || '' }}
      selectionLabel: 'in-progress'
      filterLabel: 'merged'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  check-branch:
    needs:
      - select-issue
    if: ${{ needs.select-issue.outputs.issueNumber != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      branchPrefix: 'agentic-lib-issue-'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Ensure there isn't already a branch for this prefix
        shell: bash
        run: |
          git fetch origin
          if git branch -r | grep -q 'origin/${{ env.branchPrefix }}'; then
            echo "A branch with the prefix '${{ env.branchPrefix }}' already exists issue in progress but not merged."
            exit 1
          else
            echo "No existing branch with the prefix found."
          fi

  enhance-issue:
    needs:
      - agentic-lib
      - select-issue
      - check-branch
    if: ${{ needs.select-issue.outputs.issueNumber != '' }}
    permissions:
      contents: read
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-completion-enhance-issue.yml@6.2.9'
    with:
      promptFilepath: '.github/agents/agent-ready-issue.md'
      agentConfigContent: ${{ needs.agentic-lib.outputs.agentConfigContent }}
      issueNumber: ${{ needs.select-issue.outputs.issueNumber }}
      featuresPath: ${{ needs.agentic-lib.outputs.featuresPath }}
      libraryDocumentsPath: ${{ needs.agentic-lib.outputs.documentsLibraryPath }}
      allSourcePaths: ${{ needs.agentic-lib.outputs.allSourcePaths }}
      allTestsPaths: ${{ needs.agentic-lib.outputs.allTestsPaths }}
      documentationPath: ${{ needs.agentic-lib.outputs.documentationPath }}
      readmeFilepath: ${{ needs.agentic-lib.outputs.readmeFilepath }}
      missionFilepath: ${{ needs.agentic-lib.outputs.missionFilepath }}
      contributingFilepath: ${{ needs.agentic-lib.outputs.contributingFilepath }}
      dependenciesFilepath: ${{ needs.agentic-lib.outputs.dependenciesFilepath }}
      buildScript: ${{ needs.agentic-lib.outputs.buildScript }}
      testScript: ${{ needs.agentic-lib.outputs.testScript }}
      mainScript: ${{ needs.agentic-lib.outputs.mainScript }}
      writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
      model: ${{ vars.CHATGPT_API_MODEL || 'o4-mini' }}
      npmAuthOrganisation: "${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}"
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  #issue-to-code:
  #  needs:
  #    - enhance-issue
  #  if: ${{ needs.select-issue.outputs.issueNumber != '' }}
  #  permissions:
  #    contents: write
  #    pull-requests: write
  #    checks: write
  #    issues: write
  #    id-token: write
  #    pages: write
  #  uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/agent-transformation-issue-to-code.yml@6.2.9'
  #  secrets:
  #    PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #    CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
