# .github/workflows/agent-transformation-maintenance-activity-to-issue.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: transformation-04.1-maintenance-activity-to-issue
#concurrency: agentic-lib-issue
run-name: "maintenance activity >> issue"

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Text to drive the issue creation (if "house choice", a currently random prompt will be selected). e.g. "Make an improvement to tests."'
        required: false
        type: string
        default: 'house choice'
  #workflow_run:
  #  workflows:
  #    - seed-repository
  #  types:
  #    - completed
  #  secrets:
  #    PERSONAL_ACCESS_TOKEN:
  #      required: false
  #    CHATGPT_API_SECRET_KEY:
  #      required: true
  schedule:
    - cron: '54 4 */7 * *' # schedule-1
    #- cron: '54 4 * * *' # schedule-2
    #- cron: '54 */2 * * *' # schedule-3
    #- cron: '54 4 * * *' # schedule-4

env:
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}

jobs:

  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check if CHATGPT_API_SECRET_KEY is available
        run: |
          if [ -z "${{ secrets.CHATGPT_API_SECRET_KEY }}" ]; then
            echo "::error::CHATGPT_API_SECRET_KEY is not available. Stopping workflow."
            exit 1
          fi
          echo "CHATGPT_API_SECRET_KEY is available."

  agentic-lib:
    needs:
      - check-secrets
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-agent-config.yml@6.6.1'
    with:
      configPath: ${{ vars.configPath || '.github/agents/agentic-lib.yml' }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  generate-maintenance-issue:
    needs:
      - agentic-lib
    permissions:
      contents: write
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-completion-generate-maintenance-issue.yml@6.6.1'
    with:
      promptFilepath: '.github/agents/agent-maintenance-issue.md'
      agentConfigContent: ${{ needs.agentic-lib.outputs.agentConfigContent }}
      promptHint: ${{ inputs.prompt || 'house choice' }}
      maintenanceIssuesWipLimit: '${{ needs.agentic-lib.outputs.maintenanceIssuesWipLimit }}'
      allSourcePaths: ${{ needs.agentic-lib.outputs.allSourcePaths }}
      allTestsPaths: ${{ needs.agentic-lib.outputs.allTestsPaths }}
      documentationPath: ${{ needs.agentic-lib.outputs.documentationPath }}
      readmeFilepath: ${{ needs.agentic-lib.outputs.readmeFilepath }}
      missionFilepath: ${{ needs.agentic-lib.outputs.missionFilepath }}
      contributingFilepath: ${{ needs.agentic-lib.outputs.contributingFilepath }}
      dependenciesFilepath: ${{ needs.agentic-lib.outputs.dependenciesFilepath }}
      libraryDocumentsPath: ${{ needs.agentic-lib.outputs.libraryDocumentsPath }}
      buildScript: ${{ needs.agentic-lib.outputs.buildScript }}
      testScript: ${{ needs.agentic-lib.outputs.testScript }}
      issueSelectionLabel: 'maintenance'
      mainScript: ${{ needs.agentic-lib.outputs.mainScript }}
      writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
      model: ${{ vars.CHATGPT_API_MODEL || 'o4-mini' }}
      npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  log-intention-activity:
    needs:
      - agentic-lib
      - generate-maintenance-issue
    runs-on: ubuntu-latest
    env:
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Get latest from remote
        run: |
          git config --local user.email "${{ env.gitUserEmail }}"
          git config --local user.name "${{ env.gitUserName }}"
          git pull --ff-only origin ${{ github.ref }}

      - name: log-intention-activity
        id: log-intention-activity
        uses: actions/github-script@v7
        env:
          activity: "Created issue with title ${{ needs.generate-maintenance-issue.outputs.issueTitle }}"
          seedDiscussionFilepath: ${{ needs.agentic-lib.outputs.seedDiscussionFilepath }}
        with:
          script: |
            const activity = process.env.activity;
            const seedDiscussionFilepath = process.env.seedDiscussionFilepath;

            core.info(`Activity: ${activity}`);
            core.info(`Seed discussion filepath: ${seedDiscussionFilepath}`);

            const fs = require('fs');
            const path = require('path');

            // Create trace file and the parent directory of seedDiscussionFilepath if it doesn't exist
            if (!fs.existsSync(path.dirname(seedDiscussionFilepath))) {
              fs.mkdirSync(path.dirname(seedDiscussionFilepath), { recursive: true });
            }
            const isoDate = new Date().toISOString();
            const activityLogContent = `${isoDate} - ${activity}\n\n`;
            fs.appendFileSync(seedDiscussionFilepath, activityLogContent);
            core.info(`Activity logged to ${seedDiscussionFilepath}`);

      - name: Commit changes
        run: |
          git config --local user.email "${{ env.gitUserEmail }}"
          git config --local user.name "${{ env.gitUserName }}"
          git add  ${{ needs.agentic-lib.outputs.seedDiscussionFilepath }}
          git commit -m "Activity logged" || echo "No changes to commit"
          git push

  create-issue:
    needs:
      - generate-maintenance-issue
    permissions:
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-create-issue.yml@6.6.1'
    with:
      issueTitle: ${{ needs.generate-maintenance-issue.outputs.issueTitle }}
      issueBody: ${{ needs.generate-maintenance-issue.outputs.issueDescription }}
      issueLabels: 'maintenance, automated'
