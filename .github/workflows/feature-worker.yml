# .github/workflows/feature-worker.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: Feature Worker
concurrency: feature-worker
run-name: "Feature Worker"

on:
  workflow_dispatch:
    inputs:
      feature:
        description: 'Text to drive the feature creation (if "house choice", the repository will be assessed an action chosen). e.g. "Support output to PDF."'
        required: false
        type: string
        default: 'house choice'
  schedule:
    - cron: '0 0 */28 * *' # schedule-1
    #- cron: '0 0 */7 * *' # schedule-2
    #- cron: '*/5 * * * *' # schedule-3

jobs:

  agentic-lib:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: agentic-lib
        id: agentic-lib
        shell: bash
        run: |
          featuresMaximum=$(grep '^featuresMaximum:' .github/agentic-lib.yml | awk '{print $2}')
          echo "featuresMaximum=${featuresMaximum}"
          echo "featuresMaximum=${featuresMaximum}" >> $GITHUB_OUTPUT
    outputs:
      featuresMaximum: ${{ steps.agentic-lib.outputs.featuresMaximum }}

  # If the feature is "house choice", the repository will be assessed an action chosen otherwise the supplied text will be used to generate a new feature.
  maintain-features:
    needs:
      - agentic-lib
    permissions:
      contents: write
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-completion-maintain-features.yml@3.1.0'
    with:
      feature: ${{ inputs.feature }}
      featuresDir: 'features/'
      featuresMaximum: '${{ needs.agentic-lib.outputs.featuresMaximum }}'
      target: ${{ inputs.target || 'src/lib/main.js' }}
      testFile: ${{ inputs.testFile || 'tests/unit/main.test.js' }}
      readmeFile: 'README.md'
      missionFile: 'MISSION.md'
      contributingFile: 'CONTRIBUTING.md'
      dependenciesFile: 'package.json'
      buildScript: 'npm run build'
      testScript: 'npm test'
      mainScript: ${{ vars.MAIN_SCRIPT || 'npm run start' }}
      model: ${{ vars.CHATGPT_API_MODEL || 'o3-mini' }}
      npmAuthOrganisation: '@xn-intenton-z2a'
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
