# .github/workflows/agent-mission-to-source.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: agent-mission-to-source
concurrency: agent-mission-to-source
run-name: "agent mission to source"

on:
  #push:
  #  paths:
  #    - '**/*.yml'
  workflow_dispatch:
    inputs:
      mission:
        description: 'Text to drive the source creation (if "house choice", the repository will be assessed and an action chosen). e.g. "Find out about using agents and LLMs."'
        required: false
        type: string
        default: 'house choice'
  workflow_run:
    workflows:
      - seed-repository
    types:
      - completed
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false
      CHATGPT_API_SECRET_KEY:
        required: true
  workflow_call:
    inputs:
      mission:
        description: 'Text to drive the source creation (if "house choice", the repository will be assessed and an action chosen). e.g. "Find out about using agents and LLMs."'
        required: false
        type: string
        default: 'house choice'
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false
      CHATGPT_API_SECRET_KEY:
        required: true
  schedule:
    - cron: '40 4 */7 * *' # schedule-1
    #- cron: '40 4 * * *' # schedule-2
    #- cron: '40 */4 * * *' # schedule-3
    #- cron: '40 */2 * * *' # schedule-4

env:
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}

jobs:

  agentic-lib:
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-agent-config.yml@6.0.2'
    with:
      configPath: ${{ vars.configPath || '.github/agents/agentic-lib.yml' }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  # If the feature is "house choice", the repository will be assessed an action chosen, otherwise the supplied text will be used to generate a new feature.
  maintain-sources:
    needs:
      - agentic-lib
    permissions:
      contents: write
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-completion-maintain-sources.yml@6.0.2'
    with:
      promptFilepath: '.github/agents/agent-maintain-sources.md'
      agentConfigContent: ${{ needs.agentic-lib.outputs.agentConfigContent }}
      mission: ${{ inputs.mission }}
      missionFilepath: ${{ needs.agentic-lib.outputs.missionFilepath }}
      librarySourcesFilepath: ${{ needs.agentic-lib.outputs.librarySourcesFilepath }}
      librarySourcesLimit: '${{needs.agentic-lib.outputs.librarySourcesLimit }}'
      contributingFilepath: ${{ needs.agentic-lib.outputs.contributingFilepath }}
      allTestsPaths: ${{ needs.agentic-lib.outputs.allTestsPaths }}
      allSourcePaths: ${{ needs.agentic-lib.outputs.allSourcePaths }}
      dependenciesFilepath: ${{ needs.agentic-lib.outputs.dependenciesFilepath }}
      documentationPath: ${{ needs.agentic-lib.outputs.documentationPath }}
      readmeFilepath: ${{ needs.agentic-lib.outputs.readmeFilepath }}
      writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
      model: ${{ vars.CHATGPT_API_MODEL || 'o4-mini' }}
      npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
