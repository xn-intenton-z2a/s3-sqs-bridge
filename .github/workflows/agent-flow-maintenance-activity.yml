# .github/workflows/agent-transformation-maintenance-activity-to-issue.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: flow-maintenance-activity-to-issue
concurrency: agentic-lib-main
run-name: "flow maintenance activity to issue"

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Text to drive the issue creation (if "", a currently random prompt will be selected). e.g. "Make an improvement to tests."'
        required: false
        type: string
        default: ''
  #workflow_run:
  #  workflows:
  #    - seed-repository
  #  types:
  #    - completed
  schedule:
    - cron: '34 7 */28 * *' # schedule-1
    #- cron: '34 7 */7 * *' # schedule-2
    #- cron: '34 7 * * *' # schedule-3
    #- cron: '34 7 * * *' # schedule-4

env:
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}

jobs:

  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check if CHATGPT_API_SECRET_KEY is available
        run: |
          if [ -z "${{ secrets.CHATGPT_API_SECRET_KEY }}" ]; then
            echo "::error::CHATGPT_API_SECRET_KEY is not available. Stopping workflow."
            exit 1
          fi
          echo "CHATGPT_API_SECRET_KEY is available."

  agentic-lib:
    needs:
      - check-secrets
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-agent-config.yml@6.9.1'
    with:
      configPath: ${{ vars.configPath || '.github/agents/agentic-lib.yml' }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  # GitHub Script job which checks if the target path starts with one of writeableFilepaths and fails out if not
  check-writeable-filepaths:
    needs:
      - agentic-lib
    runs-on: ubuntu-latest
    steps:
      - name: Check if target is writeable
        id: check-writeable-filepaths
        uses: actions/github-script@v7
        env:
          targetFilepath1: ${{ needs.agentic-lib.outputs.targetTestsPath }}
          targetFilepath2: ${{ needs.agentic-lib.outputs.targetSourcePath }}
          targetFilepath3: ${{ needs.agentic-lib.outputs.dependenciesFilepath }}
          targetFilepath4: ${{ needs.agentic-lib.outputs.documentationPath }}
          writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
        with:
          script: |
            const writeableFilepaths = process.env.writeableFilepaths.split(';');
            let targetFilepath1;
            let targetFilepath2;
            let targetFilepath3;
            let targetFilepath4;
            targetFilepath1 = process.env.targetFilepath1;
            targetFilepath2 = process.env.targetFilepath2;
            targetFilepath3 = process.env.targetFilepath3;
            targetFilepath4 = process.env.targetFilepath4;
            if (!writeableFilepaths.some(path => targetFilepath1.startsWith(path) ||  targetFilepath2.startsWith(path) || targetFilepath3.startsWith(path) || targetFilepath4.startsWith(path))) {
              core.setFailed(`None of the targetFilepaths "${targetFilepath1}", "${targetFilepath2}", "${targetFilepath3}", and "${targetFilepath4}" are in the list of writeable filepaths.`);
              return;
            } else {
              core.info(`One of the targetFilepaths "${targetFilepath1}", "${targetFilepath2}", "${targetFilepath3}", or "${targetFilepath4}" is in the list of writeable filepaths.`);
            }

  generate-maintenance-issue:
    needs:
      - agentic-lib
      - check-writeable-filepaths
    permissions:
      contents: write
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-completion-generate-maintenance-issue.yml@6.9.1'
    with:
      promptFilepath: '.github/agents/agent-maintenance-issue.md'
      agentConfigContent: ${{ needs.agentic-lib.outputs.agentConfigContent }}
      promptHint: ${{ inputs.prompt || '' }}
      maintenanceIssuesWipLimit: '${{ needs.agentic-lib.outputs.maintenanceIssuesWipLimit }}'
      allSourcePaths: ${{ needs.agentic-lib.outputs.allSourcePaths }}
      allTestsPaths: ${{ needs.agentic-lib.outputs.allTestsPaths }}
      documentationPath: ${{ needs.agentic-lib.outputs.documentationPath }}
      readmeFilepath: ${{ needs.agentic-lib.outputs.readmeFilepath }}
      missionFilepath: ${{ needs.agentic-lib.outputs.missionFilepath }}
      contributingFilepath: ${{ needs.agentic-lib.outputs.contributingFilepath }}
      dependenciesFilepath: ${{ needs.agentic-lib.outputs.dependenciesFilepath }}
      libraryDocumentsPath: ${{ needs.agentic-lib.outputs.libraryDocumentsPath }}
      buildScript: ${{ needs.agentic-lib.outputs.buildScript }}
      testScript: ${{ needs.agentic-lib.outputs.testScript }}
      issueSelectionLabel: 'maintenance'
      mainScript: ${{ needs.agentic-lib.outputs.mainScript }}
      writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
      model: ${{ vars.CHATGPT_API_MODEL || 'o4-mini' }}
      npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  create-issue:
    needs:
      - generate-maintenance-issue
    permissions:
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-create-issue.yml@6.9.1'
    with:
      issueTitle: ${{ needs.generate-maintenance-issue.outputs.issueTitle }}
      issueBody: ${{ needs.generate-maintenance-issue.outputs.issueDescription }}
      issueLabels: 'maintenance, automated'

  select-issue-to-enhance:
    needs:
      - create-issue
    if: ${{ !cancelled() }}
    permissions:
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-select-issue.yml@6.9.1'
    with:
      issueNumber: ${{ needs.create-issue.outputs.issueNumber }}
      selectionLabel: 'automated'
      filterLabel: 'in-progress'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  enhance-issue:
    needs:
      - create-issue
      - agentic-lib
      - select-issue-to-enhance
    if: ${{ !cancelled() }}
    permissions:
      contents: read
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-completion-enhance-issue.yml@6.9.1'
    with:
      promptFilepath: '.github/agents/agent-ready-issue.md'
      agentConfigContent: ${{ needs.agentic-lib.outputs.agentConfigContent }}
      issueNumber: ${{ needs.select-issue-to-enhance.outputs.issueNumber }}
      featuresPath: ${{ needs.agentic-lib.outputs.featuresPath }}
      libraryDocumentsPath: ${{ needs.agentic-lib.outputs.libraryDocumentsPath }}
      allSourcePaths: ${{ needs.agentic-lib.outputs.allSourcePaths }}
      allTestsPaths: ${{ needs.agentic-lib.outputs.allTestsPaths }}
      documentationPath: ${{ needs.agentic-lib.outputs.documentationPath }}
      readmeFilepath: ${{ needs.agentic-lib.outputs.readmeFilepath }}
      missionFilepath: ${{ needs.agentic-lib.outputs.missionFilepath }}
      contributingFilepath: ${{ needs.agentic-lib.outputs.contributingFilepath }}
      dependenciesFilepath: ${{ needs.agentic-lib.outputs.dependenciesFilepath }}
      buildScript: ${{ needs.agentic-lib.outputs.buildScript }}
      testScript: ${{ needs.agentic-lib.outputs.testScript }}
      mainScript: ${{ needs.agentic-lib.outputs.mainScript }}
      writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
      model: ${{ vars.CHATGPT_API_MODEL || 'o4-mini' }}
      npmAuthOrganisation: "${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}"
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  log-intention-activity:
    needs:
      - agentic-lib
      - enhance-issue
      - select-issue-to-enhance
    runs-on: ubuntu-latest
    env:
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Get latest from remote
        run: |
          git config --local user.email '${{ env.gitUserEmail }}'
          git config --local user.name '${{ env.gitUserName }}'
          git config --local pull.ff     false       # never fast-forward
          git config --local pull.rebase false       # never rebase on pull
          git fetch origin ${{ github.ref_name }}
          git merge origin/${{ github.ref_name }} --no-ff --no-edit
          git push -v origin ${{ github.ref_name }}

      - name: log-intention-activity
        id: log-intention-activity
        uses: actions/github-script@v7
        env:
          issueNumber: ${{ needs.select-issue-to-enhance.outputs.issueNumber }}
          issueBody: ${{ needs.enhance-issue.outputs.enhancedDescription }}
          intentionFilepath: ${{ needs.agentic-lib.outputs.intentionFilepath }}
          usage: ${{ needs.enhance-issue.outputs.usage }}
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issueNumber = process.env.issueNumber;
            const issueUrl = `https://github.com/${owner}/${repo}/issues/${issueNumber}`;
            const issueBody = process.env.issueBody;
            const activity = `Enhanced maintenance issue ${issueUrl} with enhanced description:\n\n${issueBody}`;
            const intentionFilepath = process.env.intentionFilepath;
            const usage = process.env.usage;

            core.info(`Activity: ${activity}`);
            core.info(`Seed discussion filepath: ${intentionFilepath}`);

            const fs = require('fs');
            const path = require('path');

            // Create trace file and the parent directory of intentionFilepath if it doesn't exist
            if (!fs.existsSync(path.dirname(intentionFilepath))) {
              fs.mkdirSync(path.dirname(intentionFilepath), { recursive: true });
            }
            const isoDate = new Date().toISOString();
            const activityLogContent = `## Enhanced Issue at ${isoDate}
            
            Activity:
            
            ${activity}
            
            LLM API Usage:
            \`\`\`json
            ${usage}
            \`\`\`
            
            ---`;
            fs.appendFileSync(intentionFilepath, activityLogContent);
            core.info(`Activity logged to ${intentionFilepath}`);

      - name: Commit changes
        run: |
          git config --local user.email '${{ env.gitUserEmail }}'
          git config --local user.name '${{ env.gitUserName }}'
          git config --local pull.ff     false       # never fast-forward
          git config --local pull.rebase false       # never rebase on pull
          git add  ${{ needs.agentic-lib.outputs.intentionFilepath }}
          git commit -m "Activity logged by agent-flow-maintenance-activity.yml" || echo "No changes to commit"
          git push

  select-issue-to-code:
    needs:
      - create-issue
      - enhance-issue
    if: ${{ !cancelled() }}
    permissions:
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-select-issue.yml@6.9.1'
    with:
      issueNumber: ${{ needs.create-issue.outputs.issueNumber }}
      selectionLabel: 'ready'
      filterLabel: 'in-progress'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  issue-to-code:
    needs:
      - create-issue
      - enhance-issue
      - select-issue-to-code
    if: ${{ !cancelled() }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
      issues: write
      id-token: write
      packages: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/agent-transformation-issue-to-code.yml@6.9.1'
    with:
      issueNumber: ${{ needs.select-issue-to-code.outputs.issueNumber }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  automerge-pr:
    needs:
      - issue-to-code
    if: ${{ !cancelled() }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
      issues: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/ci-automerge.yml@6.9.1'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
