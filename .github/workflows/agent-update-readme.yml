# .github/workflows/agent-update-readme.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: agent-update-readme
concurrency: agentic-lib-commit-readme
run-name: "agent update readme [${{ github.ref_name }}]"

on:
  workflow_dispatch:
  #workflow_run:
  #  workflows:
  #    - seed-repository
  #  types:
  #    - completed
  #  secrets:
  #    PERSONAL_ACCESS_TOKEN:
  #      required: false
  #    CHATGPT_API_SECRET_KEY:
  #      required: true
  schedule:
    - cron: '20 8 */28 * *' # schedule-1
    #- cron: '20 8 * * *' # schedule-2
    #- cron: '20 8,16 * * *' # schedule-3
    #- cron: '20 8,16 * * *' # schedule-4

env:
  branchPrefix: 'agentic-lib-'
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}

jobs:

  agentic-lib:
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-agent-config.yml@6.0.2'
    with:
      configPath: ${{ vars.configPath || '.github/agents/agentic-lib.yml' }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  check-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      branchPrefix: 'agentic-lib-update-readme'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: Ensure there isn't already a branch for this prefix
        shell: bash
        run: |
          git fetch origin
          if git branch -r | grep -q 'origin/${{ env.branchPrefix }}'; then
            echo "A branch with the prefix '${{ env.branchPrefix }}' already exists."
            exit 1
          else
            echo "No existing branch with the prefix found."
          fi

  npm-test:
    name: 'npm test with coverage'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Set up .npmrc
        if: ${{ env.npmAuthOrganisation != '' }}
        shell: bash
        run: |
          echo "${{ env.npmAuthOrganisation }}:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "always-auth=true" >> .npmrc
      - run: npm ci
      - run: npm run test:unit

  npm-build:
    name: 'npm run build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Set up .npmrc
        if: ${{ env.npmAuthOrganisation != '' }}
        shell: bash
        run: |
          echo "${{ env.npmAuthOrganisation }}:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "always-auth=true" >> .npmrc
      - run: npm ci
      - run: npm run build

  npm-run:
    name: 'npm run start'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Set up .npmrc
        if: ${{ env.npmAuthOrganisation != '' }}
        shell: bash
        run: |
          echo "${{ env.npmAuthOrganisation }}:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "always-auth=true" >> .npmrc
      - run: npm ci
      - run: ${{ vars.MAIN_SCRIPT || 'npm run start' }}

  branch-for-update:
    needs:
      - check-branch
    runs-on: ubuntu-latest
    env:
      branchPrefix: 'agentic-lib-update-readme'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
      - name: create-branch
        id: create-branch
        run: |
          echo 'Creating or force pushing to branch: ${{ env.branchPrefix }}'
          git switch --force-create '${{ env.branchPrefix }}'
          git push -v --force origin '${{ env.branchPrefix }}'
          echo 'branch=${{ env.branchPrefix }}' >> $GITHUB_OUTPUT
    outputs:
      branch: ${{ steps.create-branch.outputs.branch }}

  apply-update:
    needs:
      - agentic-lib
      - branch-for-update
      - npm-test
      - npm-build
      - npm-run
    permissions:
      contents: write
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-completion-generate-update-for-readme.yml@6.0.2'
    with:
      promptFilepath: '.github/agents/agent-update-readme.md'
      agentConfigContent: ${{ needs.agentic-lib.outputs.agentConfigContent }}
      allSourcePaths: ${{ needs.agentic-lib.outputs.allSourcePaths }}
      allTestsPaths: ${{ needs.agentic-lib.outputs.allTestsPaths }}
      readmeFilepath: ${{ needs.agentic-lib.outputs.readmeFilepath }}
      documentationPath: ${{ needs.agentic-lib.outputs.documentationPath }}
      missionFilepath: ${{ needs.agentic-lib.outputs.missionFilepath }}
      contributingFilepath: ${{ needs.agentic-lib.outputs.contributingFilepath }}
      dependenciesFilepath: ${{ needs.agentic-lib.outputs.dependenciesFilepath }}
      formattingFilepath: ${{ needs.agentic-lib.outputs.formattingFilepath }}
      lintingFilepath: ${{ needs.agentic-lib.outputs.lintingFilepath }}
      buildScript: ${{ needs.agentic-lib.outputs.buildScript }}
      testScript: ${{ needs.agentic-lib.outputs.testScript }}
      mainScript: ${{ needs.agentic-lib.outputs.mainScript }}
      branch: ${{ needs.branch-for-update.outputs.branch }}
      writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
      model: ${{ vars.CHATGPT_API_MODEL || 'o4-mini' }}
      npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  create-pr:
    needs:
      - branch-for-update
      - npm-test
      - npm-build
      - npm-run
      - apply-update
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
      checks: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-create-pr.yml@6.0.2'
    with:
      branch: "${{ needs.branch-for-update.outputs.branch }}"
      baseBranch: 'main'
      gitCommitMessage: "${{ needs.apply-update.outputs.message }}"
      label: 'automerge'

  automerge-pr:
    needs:
      - create-pr
      - branch-for-update
      - npm-test
      - npm-build
      - npm-run
      - apply-update
    permissions:
      contents: write
      pull-requests: write
      checks: write
      issues: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/ci-automerge.yml@6.0.2'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  select-next-issue:
    needs:
      - apply-update
      - create-pr
    permissions:
      issues: read
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-select-issue.yml@6.0.2'
    with:
      issueNumber: ''
      selectionLabel: 'ready'
      filterLabel: 'in-progress'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  stats:
    needs:
      - select-next-issue
      - apply-update
      - create-pr
      - agentic-lib
    if: ${{ always() }}
    permissions:
      contents: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-stats-to-aws.yml@6.0.2'
    with:
      cache: 'npm'
      npmAuthOrganisation: "${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}"
      lastActivityName: "${{ github.workflow }}"
      lastActivityBranchName: "${{ github.ref_name }}"
      nextIssue: "[${{ needs.select-next-issue.outputs.issueNumber }}] ${{ needs.select-next-issue.outputs.issueTitle }} ${{ needs.select-next-issue.outputs.issueLabels }}"
      public: ${{ needs.agentic-lib.outputs.docRoot }}
      s3BucketUrl: "${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}"
      s3WebsiteBucketUrl: "${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}"
      iamActionsRoleArn: "${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}"
      iamStatsBucketWriterRoleArn: "${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}"
      iamPublicWebsiteStatsBucketWriterRoleArn: "${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}"
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
