# .github/workflows/agent-transformation-linting-to-issue.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: flow-linting-to-issue
concurrency: agentic-lib-main
run-name: "flow linting to issue [${{ github.ref_name }}]"

on:
  workflow_dispatch:
  #workflow_run:
  #  workflows:
  #    - seed-repository
  #  types:
  #    - completed
  schedule:
    - cron: '24 4 */28 * *' # schedule-1
    #- cron: '24 4 * * *' # schedule-2
    #- cron: '24 4 * * *' # schedule-3
    #- cron: '29 4 * * *' # schedule-4

env:
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}

jobs:

  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check if CHATGPT_API_SECRET_KEY is available
        run: |
          if [ -z "${{ secrets.CHATGPT_API_SECRET_KEY }}" ]; then
            echo "::error::CHATGPT_API_SECRET_KEY is not available. Stopping workflow."
            exit 1
          fi
          echo "CHATGPT_API_SECRET_KEY is available."

  agentic-lib:
    needs:
      - check-secrets
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-agent-config.yml@6.10.1'
    with:
      configPath: ${{ vars.configPath || '.github/agents/agentic-lib.yml' }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  # GitHub Script job which checks if the target path starts with one of writeableFilepaths and fails out if not
  check-writeable-filepaths:
    needs:
      - agentic-lib
    runs-on: ubuntu-latest
    steps:
      - name: Check if target is writeable
        id: check-writeable-filepaths
        uses: actions/github-script@v7
        env:
          targetFilepath1: ${{ needs.agentic-lib.outputs.targetTestsPath }}
          targetFilepath2: ${{ needs.agentic-lib.outputs.targetSourcePath }}
          targetFilepath3: ${{ needs.agentic-lib.outputs.dependenciesFilepath }}
          targetFilepath4: ${{ needs.agentic-lib.outputs.documentationPath }}
          writeableFilepaths: ${{ needs.agentic-lib.outputs.writeableFilepaths }}
        with:
          script: |
            const writeableFilepaths = process.env.writeableFilepaths.split(';');
            let targetFilepath1;
            let targetFilepath2;
            let targetFilepath3;
            let targetFilepath4;
            targetFilepath1 = process.env.targetFilepath1;
            targetFilepath2 = process.env.targetFilepath2;
            targetFilepath3 = process.env.targetFilepath3;
            targetFilepath4 = process.env.targetFilepath4;
            if (!writeableFilepaths.some(path => targetFilepath1.startsWith(path) ||  targetFilepath2.startsWith(path) || targetFilepath3.startsWith(path) || targetFilepath4.startsWith(path))) {
              core.setFailed(`None of the targetFilepaths "${targetFilepath1}", "${targetFilepath2}", "${targetFilepath3}", and "${targetFilepath4}" are in the list of writeable filepaths.`);
              return;
            } else {
              core.info(`One of the targetFilepaths "${targetFilepath1}", "${targetFilepath2}", "${targetFilepath3}", or "${targetFilepath4}" is in the list of writeable filepaths.`);
            }

  extract-paths:
    needs:
      - agentic-lib
      - check-writeable-filepaths
    runs-on: ubuntu-latest
    steps:
      - name: Extract paths
        id: extract-paths
        uses: actions/github-script@v7
        env:
          allTestsPath: ${{ needs.agentic-lib.outputs.allTestsPath }}
          targetTestsPath: ${{ needs.agentic-lib.outputs.targetTestsPath }}
          allSourcePaths: ${{ needs.agentic-lib.outputs.allSourcePaths }}
          targetSourcePath: ${{ needs.agentic-lib.outputs.targetSourcePath }}
        with:
          script: |
            const allTestsPath = process.env.allTestsPath.split(';');
            const targetTestsPath = process.env.targetTestsPath;
            const allSourcePaths = process.env.allSourcePaths.split(';');
            const targetSourcePath = process.env.targetSourcePath;

            const allPaths = [
              ...allTestsPath,
              targetTestsPath,
              ...allSourcePaths,
              targetSourcePath
            ].join(' ');

            core.setOutput("allPaths", allPaths);
            core.info(`allPaths: ${allPaths}`);
    outputs:
      allPaths: ${{ steps.extract-paths.outputs.allPaths }}

  linting:
    needs:
      - agentic-lib
      - extract-paths
    permissions:
      contents: write
      packages: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-npm-run-script-and-commit-to-branch.yml@6.10.1'
    with:
      #script: 'npm run linting "." -- --max-warnings=10'
      script: 'npm run linting ${{ needs.extract-paths.outputs.allPaths }}'
      sarifScript: 'npm run linting-json --silent ${{ needs.extract-paths.outputs.allPaths }}'
      testScript: ${{ needs.agentic-lib.outputs.testScript }}
      npmAuthOrganisation: "${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}"
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  create-issue:
    needs:
      - linting
    if: ${{ needs.linting.outputs.fixStillRequired == 'true' || needs.linting.outputs.fixStillRequired == true || needs.linting.outputs.remainingResultsCount != '0' }}
    permissions:
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-create-issue.yml@6.10.1'
    with:
      issueTitle: 'Resolve issues in output from running: npm run linting-fix "." -- --max-warnings=10'
      issueBody: ${{ needs.linting.outputs.scriptOutput }}
      issueLabels: 'maintenance, automated'

  select-issue-to-ready:
    needs:
      - create-issue
    if: ${{ !cancelled() }}
    permissions:
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-select-issue.yml@6.10.1'
    with:
      issueNumber:  ${{ needs.create-issue.outputs.issueNumber }}
      selectionLabel: 'ready'
      filterLabel: 'in-progress'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  ready-issue:
    needs:
      - create-issue
      - select-issue-to-ready
    if: ${{ !cancelled() }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
      issues: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/agent-transformation-issue-to-ready-issue.yml@6.10.1'
    with:
      issueNumber: ${{ needs.select-issue-to-ready.outputs.issueNumber }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  select-issue-to-code:
    needs:
      - create-issue
      - ready-issue
    if: ${{ !cancelled() }}
    permissions:
      issues: write
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-select-issue.yml@6.10.1'
    with:
      issueNumber:  ${{ needs.create-issue.outputs.issueNumber || needs.ready-issue.outputs.issueNumber }}
      selectionLabel: 'ready'
      filterLabel: 'in-progress'
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  issue-to-code:
    needs:
      - create-issue
      - ready-issue
      - select-issue-to-code
    if: ${{ !cancelled() }}
    permissions:
      contents: write
      pull-requests: write
      packages: write
      checks: write
      issues: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/agent-transformation-issue-to-code.yml@6.10.1'
    with:
      issueNumber: ${{ needs.select-issue-to-code.outputs.issueNumber }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  automerge-pr:
    needs:
      - issue-to-code
    if: ${{ !cancelled() }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
      issues: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/ci-automerge.yml@6.10.1'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
