# .github/workflows/ci-automerge.yml
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: ci-automerge
concurrency: agentic-lib-merge-main
run-name: "ci-automerge [${{ github.ref_name }}]"

on:
  pull_request:
  check_suite:
  workflow_dispatch:
  workflow_call:
    inputs:
      workflow:
        description: 'Was this workflow called by another workflow?, e.g. "true"'
        type: string
        required: false
        default: 'true'
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false
      CHATGPT_API_SECRET_KEY:
        required: true
  #workflow_run:
  #  workflows:
  #    - agent-issue-to-code
  #    - agent-update-readme
  #    - ci-update
  #  types:
  #    - completed
  # secrets:
  #   PERSONAL_ACCESS_TOKEN:
  #     required: false
  #   CHATGPT_API_SECRET_KEY:
  #     required: true
  schedule:
    - cron: '53 4 */7 * *' # schedule-1
    #- cron: '53 */4 * * *' # schedule-2
    #- cron: '23,53 * * * *' # schedule-3
    #- cron: '23,53 * * * *' # schedule-4

env:
  npmAuthOrganisation: ${{ vars.npmAuthOrganisation || '@xn-intenton-z2a' }}
  s3BucketUrl: ${{ vars.s3BucketUrl || 's3://agentic-lib-telemetry-bucket/events/' }}
  s3WebsiteBucketUrl: ${{ vars.s3WebsiteBucketUrl || 's3://agentic-lib-public-website-stats-bucket/' }}
  iamActionsRoleArn: ${{ vars.iamActionsRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role' }}
  iamStatsBucketWriterRoleArn: ${{ vars.iamStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role' }}
  iamPublicWebsiteStatsBucketWriterRoleArn: ${{ vars.iamPublicWebsiteStatsBucketWriterRoleArn || 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role' }}
  pullRequestLabel: 'automerge'
  branchPrefix: 'agentic-lib-issue-'

jobs:

  label:
    runs-on: ubuntu-latest
    steps:
      - name: echo
        shell: bash
        run: |
          echo "Label: ${{ env.pullRequestLabel }}"
    outputs:
      pullRequestLabel: ${{ env.pullRequestLabel }}

  echo-event:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo 'Triggered by: ${{ github.event_name }}'

  pull-request-event:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Triggered by: pull_request"

  check-suite-event:
    if: github.event_name == 'check_suite'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Triggered by: check_suite"

  schedule-event:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Triggered by: schedule"

  workflow-dispatch-event:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Triggered by: workflow_dispatch"

  workflow-call-event:
    if: inputs.workflow == 'true' || github.event_name == 'workflow_call'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Triggered by: workflow_call"

  workflow-run-event:
    if: github.event_name == 'workflow_run'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Triggered by: workflow_run"

  pr:
    needs: label
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, needs.label.outputs.pullRequestLabel )
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-find-pr-from-pull-request.yml@6.9.9'

  cs:
    if: github.event_name == 'check_suite' && github.event.check_suite.conclusion == 'success'
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-find-pr-in-check-suite.yml@6.9.9'

  ls:
    needs: label
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || inputs.workflow == 'true' || github.event_name == 'workflow_call' || github.event_name == 'workflow_run'
    runs-on: ubuntu-latest
    steps:
      - name: Determine pull request number
        id: get-pull
        uses: actions/github-script@v7
        env:
          pullRequestLabel: ${{ needs.label.outputs.pullRequestLabel }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchPrefix = process.env.branchPrefix;
            const pullRequestLabel = process.env.pullRequestLabel;
            let pullNumber = ''
            let branchName = '';
            let issueNumber = '';
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 1,
              sort: 'created',
              direction: 'asc'
            });
            if (pullRequests.length > 0) {
              const filteredPRs = pullRequests
                .filter(pr => pr.labels.some(label => label.name === pullRequestLabel ))
                .filter(pr => pr.head.ref.startsWith(branchPrefix));
              if (filteredPRs.length > 0) {
                const pullRequest = filteredPRs[0];
                pullNumber = pullRequest.number;
                core.info(`Found open pull request with label ${pullRequestLabel}: #${pullRequest.number} and branch name ${pullRequest.head.ref}`);
                core.info(JSON.stringify(pullRequest));
              } else {
                core.info(`No open pull request found with label ${pullRequestLabel}.`);
                pullNumber = '';
              }
            } else {
              pullNumber = '';
              core.info('No open pull requests found.');
            }
            core.info(`pullNumber: ${pullNumber}`);
            core.setOutput('pullNumber', pullNumber);
          result-encoding: string
    outputs:
      pullNumber: ${{ steps.get-pull.outputs.pullNumber }}

  merge-check:
    if: ${{ !cancelled() }}
    needs:
      - pr
      - cs
      - ls
    runs-on: ubuntu-latest
    steps:
      - name: get-pull
        id: get-pull
        uses: actions/github-script@v7
        env:
          prMerged: ${{ needs.pr.outputs.prMerged || 'false' }}
          pullNumber: ${{ needs.pr.outputs.pullNumber || needs.cs.outputs.pullNumber || needs.ls.outputs.pullNumber || ''}}
          shouldSkipMerge: ${{ needs.pr.outputs.shouldSkipMerge || 'false' }}
        with:
          script: |
            // Merge outputs from pr-check, cs-check, and determine-ls.
            // Only one of pr-check or cs-check should have run.
            const prMerged = process.env.prMerged;
            const pullNumber = process.env.pullNumber;
            const branchPrefix = process.env.branchPrefix;
            const shouldSkipMerge = process.env.shouldSkipMerge;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            core.setOutput('prMerged', `${prMerged}`);
            core.setOutput('pullNumber', `${pullNumber}`);
            core.setOutput('shouldSkipMerge', `${shouldSkipMerge}`);
            core.info(`prMerged: '${prMerged}'`);
            core.info(`pullNumber: '${pullNumber}'`);
            core.info(`shouldSkipMerge: '${shouldSkipMerge}'`);
            core.info(`branchPrefix '${branchPrefix}'`);

            let branchName = '';
            let issueNumber = '';
            if( pullNumber) {
              const { data: pullRequest } = await github.rest.pulls.get({
                owner,
                repo,
                pull_number: pullNumber
              });
              branchName = pullRequest.head.ref;
              core.info(`branchName '${branchName}'`);

              const issueNumberMatch = branchName.replace(branchPrefix, '');
              if (parseInt(issueNumberMatch)) {
                issueNumber = `${parseInt(issueNumberMatch)}`;
              } else {
                issueNumber = '';
              }
            }

            core.setOutput('branchName', branchName);            
            core.info(`branchName '${branchName}'`);
            core.setOutput('issueNumber', issueNumber);
            core.info(`issueNumber '${issueNumber}'`);
          result-encoding: string
    outputs:
      prMerged: ${{ steps.get-pull.outputs.prMerged }}
      pullNumber: ${{ steps.get-pull.outputs.pullNumber }}
      shouldSkipMerge: ${{ steps.get-pull.outputs.shouldSkipMerge }}
      branchName: ${{ steps.get-pull.outputs.branchName }}
      issueNumber: ${{ steps.get-pull.outputs.issueNumber }}

  automerge:
    needs:
      - merge-check
    if: ${{ !cancelled() && needs.merge-check.outputs.shouldSkipMerge != 'true' && needs.merge-check.outputs.pullNumber != '' }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-merge-pr.yml@6.9.9'
    with:
      pullNumber: '${{ needs.merge-check.outputs.pullNumber }}'

  validate-issue-number:
    needs:
      - merge-check
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - id: validate-issue-number
        run: |
          issueNumber="${{ needs.merge-check.outputs.issueNumber }}"
          if [[ -n "$issueNumber" && "$issueNumber" =~ [0-9] ]]; then
            echo "[$issueNumber] is a valid issue number."
            echo "isValid=true" >> $GITHUB_OUTPUT
          else
            echo "[$issueNumber] is not a valid issue number."
            echo "isValid=false" >> $GITHUB_OUTPUT
          fi
    outputs:
      isValid: ${{ steps.validate-issue-number.outputs.isValid }}

  label-issue-after-automerge:
    needs:
      - merge-check
      - automerge
      - validate-issue-number
    if: ${{ !cancelled() && ( needs.automerge.outputs.prMerged == 'true' && needs.merge-check.outputs.pullNumber != '' && needs.validate-issue-number.outputs.isValid == 'true' ) }}
    permissions:
      contents: write
      issues: write
      pull-requests: read
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-label-issue.yml@6.9.9'
    with:
      pullNumber: ${{ needs.automerge.outputs.prMerged == 'true' && needs.merge-check.outputs.pullNumber || '' }}
      issueNumber: '${{ needs.merge-check.outputs.issueNumber }}'

  agentic-lib:
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-agent-config.yml@6.9.9'
    with:
      configPath: ${{ vars.configPath || '.github/agents/agentic-lib.yml' }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  log-intention-activity-merge-pr:
    needs:
      - agentic-lib
      - merge-check
      - automerge
    if: ${{ !cancelled() && needs.merge-check.outputs.shouldSkipMerge != 'true' && needs.merge-check.outputs.pullNumber != '' }}
    runs-on: ubuntu-latest
    env:
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Get latest from remote
        run: |
          git config --local user.email '${{ env.gitUserEmail }}'
          git config --local user.name '${{ env.gitUserName }}'
          git config --local pull.ff     false       # never fast-forward
          git config --local pull.rebase false       # never rebase on pull
          git fetch origin ${{ github.ref_name }}
          git merge origin/${{ github.ref_name }} --no-ff --no-edit --strategy=recursive --strategy-option=ours

      - name: log-intention-activity
        id: log-intention-activity
        uses: actions/github-script@v7
        env:
          pullNumber: ${{ needs.merge-check.outputs.pullNumber }}
          shouldSkipMerge: ${{ needs.merge-check.outputs.shouldSkipMerge }}
          branchName: ${{ needs.merge-check.outputs.branchName }}
          issueNumber: ${{ needs.merge-check.outputs.issueNumber }}
          prMerged: ${{ needs.automerge.outputs.prMerged }}
          message: ${{ needs.automerge.outputs.message }}
          outcome: ${{ needs.automerge.result }}
          intentionFilepath: ${{ needs.agentic-lib.outputs.intentionFilepath }}
        with:
          script: |
            const pullNumber = process.env.pullNumber;
            const shouldSkipMerge = process.env.shouldSkipMerge;
            const branchName = process.env.branchName;
            const issueNumber = process.env.issueNumber;
            const prMerged = process.env.prMerged;
            const message = process.env.message;
            const outcome = process.env.outcome;
            const intentionFilepath = process.env.intentionFilepath;

            const activity = `When attempting to merge PR #${pullNumber} for branch name "${branchName}" to resolve issue number "${issueNumber}" the decision to skip merge was "${shouldSkipMerge}":
            
            then the PR was merged "${prMerged}"
            
            with message: "${message}"
            
            with outcome "${outcome}".`;

            core.info(`Activity: ${activity}`);
            core.info(`Seed discussion filepath: ${intentionFilepath}`);

            const fs = require('fs');
            const path = require('path');

            // Create trace file and the parent directory of intentionFilepath if it doesn't exist
            if (!fs.existsSync(path.dirname(intentionFilepath))) {
              fs.mkdirSync(path.dirname(intentionFilepath), { recursive: true });
            }
            const isoDate = new Date().toISOString();
            const activityLogContent = `\n## Merge PR activity at ${isoDate}
            
            ${activity}
            
            ---
            `;
            if (fs.existsSync(intentionFilepath)) {
              fs.appendFileSync(intentionFilepath, activityLogContent);
            } else {
              fs.writeFileSync(intentionFilepath, activityLogContent);
            }
            core.info(`Activity logged to ${intentionFilepath}`);

      - name: Commit changes
        run: |
          git config --local user.email '${{ env.gitUserEmail }}'
          git config --local user.name '${{ env.gitUserName }}'
          git config --local pull.ff     false       # never fast-forward
          git config --local pull.rebase false       # never rebase on pull
          git add  ${{ needs.agentic-lib.outputs.intentionFilepath }}
          git commit -m "Activity logged by agent-seed-repository.yml, seed repository" || echo "No changes to commit"
          git fetch origin ${{ github.ref_name }}
          git merge origin/${{ github.ref_name }} --no-ff --no-edit --strategy=recursive --strategy-option=ours
          git push -v origin ${{ github.ref_name }}
